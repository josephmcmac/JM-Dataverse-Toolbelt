<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/JosephM.Wpf;component/Resources/Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="ErrorTemplate">
        <DockPanel DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Grid Margin="0,0,5,0" ToolTip="{Binding ElementName=AdornedFieldElement, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                <Ellipse Width="20" Height="20" Canvas.Left="0.791662" Canvas.Top="0.791664" Stretch="Fill" Fill="{DynamicResource ErrorColor}" />
                <Path Width="12" Height="12" Canvas.Left="20.1857" Canvas.Top="19" Stretch="Fill" Fill="{DynamicResource BackgroundColor}" Data="F1 M 56.0143,57L 45.683,57L 39.0246,44.6245C 38.7758,44.1665 38.5156,43.3183 38.2442,42.0799L 38.1339,42.0799C 38.0095,42.6623 37.7127,43.5473 37.2433,44.7348L 30.5594,57L 20.1857,57L 32.5018,38L 21.2714,19L 31.8487,19L 37.3621,30.3915C 37.7918,31.2963 38.1763,32.365 38.5156,33.5977L 38.6259,33.5977C 38.8408,32.857 39.2394,31.7543 39.8219,30.2897L 45.8951,19L 55.4714,19L 44.0969,37.8388L 56.0143,57 Z "/>
            </Grid>
            <AdornedElementPlaceholder Name="AdornedFieldElement" />
        </DockPanel>
    </ControlTemplate>
    <Style x:Key="FieldLoadingStyle" TargetType="UserControl">
        <Setter Property="Height" Value="35" />
        <Setter Property="Margin" Value="20,-22,8,0" />
    </Style>
    <Style x:Key="FieldEntryStyle" TargetType="Control">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="Background" Value="{DynamicResource FieldEntryBackgroundColor}" />
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="Margin" Value="8,8,8,8" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="MaxHeight" Value="300" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}" />
    </Style>
    <Style x:Key="FieldEntryButtonGridStyle" TargetType="Grid">
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>
    <Style x:Key="DatePickerFieldEntryStyle" TargetType="{x:Type DatePicker}" BasedOn="{StaticResource FieldEntryStyle}" >
        <Style.Resources>
            <Style TargetType="DatePickerTextBox">
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="Background" Value="{DynamicResource FieldEntryBackgroundColor}"/>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="StringFieldEntryStyle" TargetType="TextBox" BasedOn="{StaticResource FieldEntryStyle}" >
        <Setter Property="TextWrapping" Value="Wrap" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DoNotLimitDisplayHeight}" Value="True">
                <Setter Property="MaxHeight" Value="5000"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="IntegerFieldEntryStyle" TargetType="TextBox" BasedOn="{StaticResource FieldEntryStyle}" >
    </Style>
    <Style x:Key="BooleanFieldEntryStyle" TargetType="CheckBox" BasedOn="{StaticResource FieldEntryStyle}" >
        <Setter Property="Margin" Value="18,13,8,8" />
        <Setter Property="Background" Value="{DynamicResource LightColor}" />
        <Setter Property="Foreground" Value="{DynamicResource DarkColor}" />
    </Style>
    <Style x:Key="PicklistFieldEntryStyle" TargetType="ComboBox" BasedOn="{StaticResource FieldEntryStyle}" >
    </Style>
    <Style x:Key="LookupFieldEntryStyle" TargetType="TextBox" BasedOn="{StaticResource FieldEntryStyle}" >
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <Style x:Key="StringFieldEntryStyleReadOnly" TargetType="TextBox" BasedOn="{StaticResource FieldEntryStyle}" >
        <Setter Property="TextAlignment" Value="{Binding HorizontalJustify, Converter={StaticResource TextHorizontalJustifyConverter}}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding DoNotLimitDisplayHeight}" Value="True">
                <Setter Property="MaxHeight" Value="5000"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GridStringFieldEntryStyleReadOnly" TargetType="TextBox" BasedOn="{StaticResource StringFieldEntryStyleReadOnly}" >
        <Setter Property="MaxHeight" Value="100" />
    </Style>
    <Style x:Key="UrlFieldStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="Margin" Value="10,8,10,8" />
    </Style>
    <Style x:Key="FieldLabelStyle" TargetType="TextBlock">
        <Setter Property="Margin" Value="12,12,12,12" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
    </Style>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource FieldEntryBackgroundColor}"
                  BorderBrush="{DynamicResource BorderColor}"
                  BorderThickness="1">
            </Border>
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{DynamicResource FieldEntryBackgroundColor}"
                  BorderBrush="{DynamicResource BorderColor}"
                  BorderThickness="0,0,1,0"
                >
            </Border>
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{DynamicResource BorderColor}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource FieldEntryStyle}">
        <Setter Property="Margin" Value="8,6,8,8" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Background" Value="{DynamicResource SelectedBackgroundColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="8,6,28,6"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource BackgroundColor}"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource BorderColor}" />
                                <ScrollViewer Margin="8,6,8,8" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Background" Value="{DynamicResource SelectedBackgroundColour}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="8,5,8,5"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SelectedBackgroundColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MultiSelectCellGridStyle" TargetType="Grid" >
        <Style.Triggers>
            <DataTrigger Binding="{Binding Select}" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectedBackgroundColor}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>